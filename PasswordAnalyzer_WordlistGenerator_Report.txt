
Password Analyzer & Wordlist Generator
Cybersecurity Internship Final Project Report
------------------------------------------------------------

Project Title:
Password Analyzer & Wordlist Generator using Python

Developed By:
Aymaan Khan

Abstract:
This project focuses on two fundamental yet powerful tools in the field of cybersecurity:

1. Password Analyzer â€“ Evaluates the strength of user-input passwords based on common security criteria like length, use of uppercase/lowercase letters, numbers, and symbols.

2. Wordlist Generator â€“ Creates customized brute-force wordlists by generating all possible combinations of given characters over a specified length range. These are useful in password-cracking simulations or penetration testing environments.

The project demonstrates core security concepts and basic Python scripting with user-friendly command-line tools.

Tools and Technologies Used:
- Programming Language: Python
- Libraries: itertools (for combination generation)
- IDE/Editor: VS Code / Notepad
- Platform: Windows

Project Structure:
PasswordTools/
â”œâ”€â”€ password_analyzer.py      # Checks password strength
â”œâ”€â”€ wordlist_generator.py     # Generates brute-force wordlist
â”œâ”€â”€ wordlist.txt              # Output file with generated combinations

Implementation Details:

1. Password Analyzer:
- Takes a password as input.
- Checks for:
  - Minimum length (8 characters)
  - Uppercase and lowercase letters
  - Digits
  - Special characters
- Gives a strength rating: Strong, Medium, or Weak

Sample Output:
Enter a password to analyze: Pass@123
Password Strength:
Strong ðŸ’ª

2. Wordlist Generator:
- Takes user input:
  - Characters (like abc123)
  - Minimum and maximum length of passwords
- Generates all combinations using itertools.product()
- Saves them in wordlist.txt

Sample Output:
Enter base characters (like abc123): ab
Enter minimum password length: 2
Enter maximum password length: 3
Wordlist saved as wordlist.txt

Key Learnings:
- Password strength analysis logic
- Brute-force attack fundamentals
- Writing to and reading from files
- Command-line interaction using Python
- Basic use of itertools.product() for permutations

Conclusion:
This project successfully demonstrates the development of two beginner-friendly cybersecurity tools. Despite being simple, both tools offer foundational insight into password policies and brute-force wordlist generation. The knowledge gained will support future work in ethical hacking and security automation.
